
@{
    ViewBag.Title = ".NET文档园 .NET开源ORM - 首页";
}
@using FreeSql.Site.UI.Areas.BBS.Models;
<script>
    var dialog_Paramters = { height: 660, width: 1100 };
</script>

<table class="layui-table" id="test" lay-filter="test"></table>

<script type="text/html" id="docContentEdit">
</script>

<script type="text/html" id="toolbarDemo">
    <div class="layui-btn-container">
        <button class="layui-btn layui-btn-sm" lay-event="add">添加</button>
        <button class="layui-btn layui-btn-sm" lay-event="delete">删除</button>
        <button class="layui-btn layui-btn-sm" lay-event="update">编辑</button>
        <div style="float:right;border:0px solid red;">
            <input type="text" name="search_txt" lay-verify="title" autocomplete="off" placeholder="标题" class="layui-input" style="height: 30px;width:160px;float:left;">
            <a href="#" style="line-height:30px;margin-left:8px;">高级查询</a>
        </div>
    </div>
</script>

<script type="text/html" id="barDemo">
    <a class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>
    <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
</script>

<script>
    var testEditor;
    layui.use(['form', 'layedit', 'laydate', 'table'], function () {
        var table = layui.table;
        var form = layui.form
            , layer = layui.layer
            , layedit = layui.layedit
            , laydate = layui.laydate;

        //日期
        laydate.render({
            elem: '#date'
        });
        laydate.render({
            elem: '#date1'
        });


        table.render({
            elem: '#test'
            , url: '/Admin/Document/DocContentList'
            , where: { searchContent: '', seniorQueryJson: "" }
            , toolbar: '#toolbarDemo'
            , title: '文档列表'
            , cols: [[
                { type: 'checkbox', fixed: 'left' }
                , { field: 'ID', title: 'ID', width: 80, fixed: 'left', unresize: true, sort: true }
                , { field: 'DocTitle', title: '标题', edit: 'text' }
                , { field: 'Status', title: '状态', width: 80, edit: 'text', sort: true }
                , { field: 'WatchCount', title: '阅读量市', width: 100 }
                , { field: 'StarCount', title: '获赞数', width: 100 }
                , { field: 'CreateDt', title: '创建时间', width: 160, sort: true }
                , { field: 'UpdateDt', title: '修改时间', width: 160 }
                , { fixed: 'right', title: '操作', toolbar: '#barDemo', width: 150 }
            ]]
            , page: true
        });

        //监听事件
        table.on('toolbar(test)', function (obj) {
            var checkStatus = table.checkStatus(obj.config.id);
            switch (obj.event) {
                case 'add':
                    dialogWindow.open({
                        type: 1,
                        maxmin: true,
                        title: "新增文档",
                        area: ['1100px', '660px'],
                        shadeClose: false, //点击遮罩关闭
                        content: $("#docContentEdit").html(),
                        submit: {
                            url: "/Admin/Document/DocContentCreate",
                        }
                    }, form);
                    break;
                case 'delete':
                    layer.msg('删除');
                    break;
                case 'update':
                    layer.msg('编辑');
                    break;
            };
        });

        //监听行工具事件
        table.on('tool(test)', function (obj) {
            var data = obj.data;
            if (obj.event === 'del') {
                layer.confirm('确定要删除吗？', function (index) {
                    //调用删除
                    $.ajax({
                        type: "POST",
                        url: "/Admin/Document/DocContentDelete",
                        data: { id: docid },
                        dataType: "html",
                        success: function (data) {
                            obj.del();
                            layer.close(index);
                        },
                        error: function () {
                            layer.close(index);
                            layer.alert("删除失败！");
                        }
                    });
                });
            } else if (obj.event === 'edit') {
                $("#docContentEdit").load("/Admin/Document/DocContentEditModule", { id: data.ID }, function (responseText, textStatus, jqXHR) {
                    switch (textStatus) {
                        case "success":
                            dialogWindow.open({
                                type: 1,
                                maxmin: true,
                                title: "编辑文档",
                                area: ['1100px', '660px'],
                                shadeClose: false, //点击遮罩关闭
                                content: responseText,
                                submit: {
                                    url: "/Admin/Document/DocContentCreate",
                                }
                            }, form);
                            break;
                        case "error":
                            freejs.showMessage({ title: "提示", msg: "页面加载失败", type: 2 });
                            break;
                    }
                });

                //form.render();
                //layer.prompt({
                //    formType: 2
                //    , value: data.email
                //}, function (value, index) {
                //    obj.update({
                //        email: value
                //    });
                //    layer.close(index);
                //});
            }
        });

        //先简单封装下
        var dialogWindow = {
            open: function (options, form) {
                var base_options = {
                    type: 1,
                    maxmin: true,
                    title: "编辑",
                    area: ['1100px', '660px'],
                    shadeClose: false //点击遮罩关闭
                };
                var new_options = $.extend(base_options, options);
                new_options.success = function (layero, index) {
                    form.render();
                    $(".form-module-content").height(dialog_Paramters.height - 110);
                    testEditor = editormd("md_DocContent", {
                        width: "96%",
                        height: 640,
                        syncScrolling: "single",
                        path: "../../lib/editormd/lib/"
                    });
                    //监听提交
                    form.on('submit(formDemo)', function (data) {
                        debugger
                        $.ajax({
                            type: 'POST',
                            url: options.submit.url,//"/Admin/Document/DocContentCreate",
                            data: JSON.stringify(data.field),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (e) {
                                alert(JSON.stringify(e));
                            }
                        });
                        return false;
                    });
                }
                layer.open(new_options);
            },
            close: function () {

            }
        };

        $(document).on('click', '#btnSubmit', function () {
            layer.msg('响应点击事件');
        });
    });
</script>
